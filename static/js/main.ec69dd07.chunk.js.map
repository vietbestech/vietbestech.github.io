{"version":3,"sources":["firebase.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","ref","product","id","push","key","child","update","value","remove","AddTutorial","props","onChangeCategory","bind","onChangeDescription","onChangeId","onChangePrice","onChangeSection","onChangeTitle","onChangeUrl1","onChangeUrl2","onChangeUrl3","saveTutorial","newTutorial","state","category","description","price","section","title","url1","url2","url3","urls","e","this","setState","target","data","TutorialDataService","create","then","console","log","submitted","catch","className","onClick","htmlFor","required","onChange","name","type","Component","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","published","message","tutorial","prevState","status","delete","refreshList","nextProps","TutorialsList","setActiveTutorial","removeAllTutorials","onDataChange","tutorials","currentIndex","getAll","on","off","items","forEach","item","val","index","deleteAll","map","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ec69dd07.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/database\";\n\nlet config = {\n  apiKey: \"AIzaSyAkSpwAvjB5X4hS3XDL4OIdyYwyoEestgY\",\n  authDomain: \"shopdata-e85b7.firebaseapp.com\",\n  databaseURL: \"https://shopdata-e85b7-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"shopdata-e85b7\",\n  storageBucket: \"shopdata-e85b7.appspot.com\",\n  messagingSenderId: \"69011256494\",\n  appId: \"1:69011256494:web:a970897089a4600b1a693f\",\n  measurementId: \"G-BLMTYSZVB2\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/product\");\n\n\nclass TutorialDataService {\n  getAll() {\n    return db;\n  }\n\n  create(product) {\n    product.id =db.push(product).key;\n    return db.child(product.id).update(product);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new TutorialDataService();\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeId = this.onChangeId.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onChangeSection = this.onChangeSection.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeUrl1 = this.onChangeUrl1.bind(this);\n    this.onChangeUrl2 = this.onChangeUrl2.bind(this);\n    this.onChangeUrl3 = this.onChangeUrl3.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      category: \"\",\n      description: \"\",\n      id: \"\",\n      price: \"\",\n      section: \"\",\n      title: \"\",\n      url1:\"\",\n      url2:\"\",\n      url3:\"\",\n      urls: []\n    };\n  }\n\n  onChangeCategory(e) {\n    this.setState({\n      category: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n  onChangeId(e) {\n    this.setState({\n      id: e.target.value,\n    });\n  }\n  onChangePrice(e) {\n    this.setState({\n      price: e.target.value,\n    });\n  }\n  onChangeSection(e) {\n    this.setState({\n    section: e.target.value,\n    });\n  }\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n  onChangeUrl1(e) {\n    this.setState({\n      url1: e.target.value,\n    });\n  }\n  onChangeUrl2(e) {\n    this.setState({\n      url2: e.target.value,\n    });\n  }\n  onChangeUrl3(e) {\n    this.setState({\n      url3: e.target.value,\n    });\n  }\n\n\n  saveTutorial() {\n    let data = {\n      category: this.state.category,\n      description: this.state.description,\n      id: this.state.id,\n      price: this.state.price,\n      section: this.state.section,\n      title: this.state.title,\n      urls: [this.state.url1,this.state.url2,this.state.url3],\n    };\n\n    TutorialDataService.create( data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      category: \"\",\n      description: \"\",\n      id: \"\",\n      price: \"\",\n      section: \"\",\n      title: \"\",\n      url1:\"\",\n      url2:\"\",\n      url3:\"\",\n      urls: []\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">category</label>\n              <select\n                className=\"form-control\"\n                id=\"category\"\n                required\n                value={this.state.category}\n                onChange={this.onChangeCategory}\n                name=\"category\"\n              > \n              <option ></option>\n              <option value=\"Electric Grid\">Electric Grid</option>\n              <option value=\"Technology\">Technology</option>\n              <option value=\"Telecommunication\">Telecommunication</option>\n              <option value=\"Agriculture\">Agriculture</option>\n              <option value=\"Solar Panel\">Solar Panel</option>\n              <option value=\"Battery\">Battery</option>\n\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">description</label>\n              <textarea \n          \n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n    \n         \n            <div className=\"form-group\">\n              <label htmlFor=\"section\">section</label>\n              <select\n              className=\"form-control\"\n              id=\"section\"\n              required\n              value={this.state.section}\n              onChange={this.onChangeSection}\n              name=\"section\"\n              > \n              <option ></option>\n              <option value=\"None\">None</option>\n              <option value=\"Featured\">Featured</option>\n              <option value=\"TopSelling\">TopSelling</option>\n              <option value=\"TrendingProducts\">TrendingProducts</option>\n           \n\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">title</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n       \n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture1</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url1\"\n                required\n                value={this.state.url1}\n                onChange={this.onChangeUrl1}\n                name=\"url1\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture2</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url2\"\n                required\n                value={this.state.url2}\n                onChange={this.onChangeUrl2}\n                name=\"url2\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture3</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url3\"\n                required\n                value={this.state.url3}\n                onChange={this.onChangeUrl3}\n                name=\"url3\"\n              />\n            </div>\n            \n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeSection = this.onChangeSection.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeUrl1=this.onChangeUrl1.bind(this);\n    this.onChangeUrl2=this.onChangeUrl2.bind(this);\n    this.onChangeUrl3=this.onChangeUrl3.bind(this);\n\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        key: null,\n        category: \"\",\n        description: \"\",\n        section: \"\",\n        title: \"\",\n        urls:[],\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tutorial } = nextProps;\n    if (prevState.currentTutorial.key !== tutorial.key) {\n      return {\n        currentTutorial: tutorial,\n        message: \"\"\n      };\n    }\n\n    return prevState.currentTutorial;\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentTutorial: this.props.tutorial,\n    });\n  }\n\n  onChangeCategory(e) {\n    const category = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          category: category,\n        },\n      };\n    });\n  }\n  \n  onChangeSection(e) {\n    const section = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          section: section,\n        },\n      };\n    });\n  }\n\n  onChangeUrl1(e) {\n    const url1 = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          url1: url1,\n        },\n      };\n    });\n  }\n\n  onChangeUrl2(e) {\n    const url2 = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          url2: url2,\n        },\n      };\n    });\n  }\n  onChangeUrl3(e) {\n    const url3 = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          url3: url3,\n        },\n      };\n    });\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description,\n      },\n    }));\n  }\n\n  updatePublished(status) {\n    TutorialDataService.update(this.state.currentTutorial.key, {\n      published: status,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n          message: \"The status was updated successfully!\",\n        }));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    const data = {\n      category: this.state.currentTutorial.category,\n      section: this.state.currentTutorial.section,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      urls:[this.state.currentTutorial.url1,this.state.currentTutorial.url2,this.state.currentTutorial.url3],\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.key, data)\n      .then(() => {\n        console.log(this.state.currentTutorial.key)\n        this.setState({\n          message: \"The tutorial was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.key)\n      .then(() => {\n        this.props.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        <h4>Tutorial</h4>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">category</label>\n              <select\n                className=\"form-control\"\n                id=\"category\"\n                required\n                value={this.state.category}\n                onChange={this.onChangeCategory}\n                name=\"category\"\n              > \n              <option ></option>\n              <option value=\"Electric Grid\">Electric Grid</option>\n              <option value=\"Technology\">Technology</option>\n              <option value=\"Telecommunication\">Telecommunication</option>\n              <option value=\"Agriculture\">Agriculture</option>\n              <option value=\"Solar Panel\">Solar Panel</option>\n              <option value=\"Battery\">Battery</option>\n\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">description</label>\n              <textarea \n          \n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n    \n         \n            <div className=\"form-group\">\n              <label htmlFor=\"section\">section</label>\n              <select\n              className=\"form-control\"\n              id=\"section\"\n              required\n              value={this.state.section}\n              onChange={this.onChangeSection}\n              name=\"section\"\n              > \n              <option ></option>\n              <option value=\"None\">None</option>\n              <option value=\"Featured\">Featured</option>\n              <option value=\"TopSelling\">TopSelling</option>\n              <option value=\"TrendingProducts\">TrendingProducts</option>\n           \n\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">title</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n       \n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture1</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url1\"\n                required\n                value={this.state.url1}\n                onChange={this.onChangeUrl1}\n                name=\"url1\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture2</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url2\"\n                required\n                value={this.state.url2}\n                onChange={this.onChangeUrl2}\n                name=\"url2\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Picture3</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"url3\"\n                required\n                value={this.state.url3}\n                onChange={this.onChangeUrl3}\n                name=\"url3\"\n              />\n            </div>\n           \n            </form>\n\n          \n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport Tutorial from \"./tutorial.component\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    console.log(items)\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        category: data.category,\n        section: data.section,\n        title: data.title,\n        description: data.description,\n        url1:data.urls[0],\n        url2:data.urls[1],\n        url3:data.urls[2],\n        published: data.published,\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(() => {\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <Tutorial\n              tutorial={currentTutorial}\n              refreshList={this.refreshList}\n            />\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            Vietbestech\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Update-Delete\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <h2>NGUYEN TAN THU ADMIN</h2>\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}